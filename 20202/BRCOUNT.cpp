#include<bits/stdc++.h>
using namespace std;

string s;
const int MOD = 1e9 + 7;
int cnt = 0;

bool check(string tmp){
	stack<char> st;
	for (int i = 0; i < tmp.length(); i++){
		if (tmp[i] == '('){
			st.push(tmp[i]);
		} else {
			if (st.empty()) return false;
			st.pop();
		}
	}
	if (st.size() == 0) return true;
	return false;
}

void Try(int i, string tmp, int balance){
	if (balance < 0 || balance > s.length() - i){
		return;
	}
	if (i == s.length()){
		if (check(tmp)){
			cnt = (cnt + 1) % MOD;
			cout << tmp << endl;
		}
		return;
	}
	if (s[i] == '('){
		Try(i + 1, tmp + '(', balance + 1);
	} else if (s[i] == ')'){
		Try(i + 1, tmp + ')', balance - 1);
	} else if (s[i] == '?'){
		Try(i + 1, tmp + '(', balance + 1);
		Try(i + 1, tmp + ')', balance - 1);
	}
}

int main(){
	cin >> s;
	Try(0, "", 0);
	cout << cnt;
	return 0;
}
/*
(??(??))
(((())))
(()(()))
(()()())
()((()))
()(()())
5

(??))((?)(??))??))((?)?)
((())((()((())()))(())))
((())((()((()))())(())))
((())((()((())))))((()))
((())((()((())))))(())()
((())((()(()))(())(())))
((())((()(()))()))((()))
((())((()(()))()))(())()
((())((()(())))())((()))
((())((()(())))())(())()
((())((()()())(())(())))
((())((()()())()))((()))
((())((()()())()))(())()
((())((()()()))())((()))
((())((()()()))())(())()
((())((()())))(())((()))
((())((()())))(())(())()
((())(())((())(())(())))
((())(())((())()))((()))
((())(())((())()))(())()
((())(())((()))())((()))
((())(())((()))())(())()
((())(())(()))(())((()))
((())(())(()))(())(())()
((())(())()())(())((()))
((())(())()())(())(())()
25
*/
